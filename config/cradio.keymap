/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#include "wrappers.h"

/*                KEY POSITIONS

  ╭────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4 │ │  5   6   7   8   9 │
  │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
  │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
  ╰───────────╮ 30  31 │ │ 32  33 ╭───────────╯
              ╰────────╯ ╰────────╯            
*/

#define BASE_LAYER 0
#define NAV_LAYER 1
#define NUM_UML_LAYER 2
#define SYM_LAYER 3
#define BLE_LAYER 4

&caps_word {
   continue-list = <LSHIFT deUNDERSCORE deMINUS BSPC>; 
};

/ {

    macros {
        shift_shift: shift_shift {
            label = "double_shift";
            compatible = "zmk,behavior-macro";
	    #binding-cells = <0>;
            wait-ms = <40>;
	    tap-ms = <40>;
	    bindings
	    = <&kp LSHIFT &kp LSHIFT>
	    ;
        };
	
	lambda_arrow: lambda_arrow {
            label = "lambda_arrow";
            compatible = "zmk,behavior-macro";
	    #binding-cells = <0>;
            wait-ms = <10>;
	    tap-ms = <10>;
	    bindings
	    = <&kp deMINUS &kp deGREATER_THAN>
	    ;
        };
	
    };

    combos {
        compatible = "zmk,combos";

	combo_one_shot_gui_left {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&sk LGUI>;
        };

	combo_one_shot_alt_left {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&sk LALT>;
        };

	combo_one_shot_ctrl_left {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&sk LCTRL>;
        };

        combo_arrow {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&lambda_arrow>;
        };

        combo_del {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp DEL>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp TAB>;
        };
	
	combo_esc {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp ESC>;
        };
	
	combo_equals {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp deEQUAL>;
        };

        combo_lBracket {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp deLEFT_BRACKET>;
        };

        combo_lBrace {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp deLEFT_BRACE>;
        };
 
        combo_lParan {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp deLEFT_PARENTHESIS>;
        };
	
        combo_less_than {
            timeout-ms = <50>;
            key-positions = <23 24>;
            bindings = <&kp deLESS_THAN>;
        };
	
 	combo_grave {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp deGRAVE>;
        };
 
        combo_enter {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp RET>;
        };
 
        combo_ctrl_backspace {
            timeout-ms = <50>;
            key-positions = <16 17 18>;
            bindings = <&kp LC(BSPC)>;
        };

        combo_backspace {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp BSPC>;
        };
	
	combo_caps_word {
            timeout-ms = <50>;
            key-positions = <13 16>;
            bindings = <&caps_word>;
        };	

	combo_underscore_right {
            timeout-ms = <50>;
            key-positions = <5 6>;
            bindings = <&kp deUNDERSCORE>;
        };

	combo_one_shot_ctrl_right {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&sk LCTRL>;
        };

	combo_one_shot_alt_right {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&sk LALT>;
        };
	
	combo_one_shot_gui_right {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&sk LGUI>;
        };
	
        combo_bleLayer {
            timeout-ms = <125>;
            key-positions = <30 31>;
            bindings = <&mo BLE_LAYER>;
        };
	
    };
   
    
    behaviors {        
		hm_shift: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping_term_ms = <125>;
			quick_tap_ms = <200>;
			global-quick-tap;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
		
		hm_gui: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping_term_ms = <175>;
			quick_tap_ms = <200>;
			global-quick-tap;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
		
		gqt: global-quick-tap {
		    compatible = "zmk,behavior-hold-tap";
		    label = "GLOBAL_QUICK_TAP";
		    #binding-cells = <2>;
		    flavor = "tap-preferred";
		    tapping-term-ms = <175>;
		    quick-tap-ms = <125>;
		    global-quick-tap;
		    retro-tap;
		    bindings = <&kp>, <&kp>;
		};
		
		morph_tab: morph_tab {
		    compatible = "zmk,behavior-mod-morph";
		    label = "MOD_MORPH";
		    #binding-cells = <0>;
		    bindings = <&lt BLE_LAYER ESC>, <&kp TAB>;
		    mods = <(MOD_LGUI|MOD_LSFT|MOD_LCTL|MOD_LALT)>;
		};

	};
 


    keymap {
       compatible = "zmk,keymap";

/*                ALPHA LAYER 

  ╭────────────────────╮ ╭────────────────────╮
  │  /   F   C   K   ? │ │  '   B   O   U   Z │
  │  R   S   T   H   D │ │  V   N   A   I   L │
  │  X   Y   G   M   Q │ │  W   P   .   ,   J │
  ╰───────────╮    SPC │ │  E   ⇧ ╭───────────╯
              ╰────────╯ ╰────────╯            
*/
       BASE_LAYER {
          bindings = <
&kp deSLASH     &kp F        &kp C         &kp K               &kp deQUESTION        &kp deSQT  &kp B               &kp O         &kp U        &kp deZ
&hm_gui LGUI R  &gqt LALT S  &gqt LCTRL N  &hm_shift LSHIFT H  &kp D                 &kp V      &hm_shift LSHIFT T  &gqt LCTRL A  &gqt LALT I  &hm_gui LGUI L 
&kp X           &kp deY      &kp M         &kp G               &kp Q                 &kp W      &kp P               &kp DOT       &kp COMMA    &kp J
                                               &morph_tab  &lt NAV_LAYER SPACE         &lt NUM_UML_LAYER E  &lt SYM_LAYER LC(BSPC)
                  >;
                };


       NAV_LAYER {
          bindings = <
  &none  &none  &none  &none  &none      &none    &none     &none   &none      &none
  &none  &none  &none  &none  &none      &kp LEFT &kp DOWN  &kp UP  &kp RIGHT  &none
  &none  &none  &none  &none  &none      &none    &none     &none   &none      &none
                        &none &none      &none  &kp LSHFT
                        >;
                };
/*
   NUMBER LAYER
  ╭────────────────────╮ ╭────────────────────╮
  │      9   8   7     │ │ __  __   ö   ü  __ │
  │      3   2   1     │ │ __  __   ä  __   ß │
  │      6   5   4     │ │ __  __  __  __  __ │
  ╰───────────╮  _   0 │ │        ╭───────────╯
              ╰────────╯ ╰────────╯            
*/
       NUM_UML_LAYER {
          bindings = <
  &none  &kp N9  &kp N8  &kp N7  &none      &none  &none  &kp deOE  &kp deUE  &none
  &none  &kp N3  &kp N2  &kp N1  &none      &none  &none  &kp deAE  &none     &kp deNUMBER_SS
  &none  &kp N6  &kp N5  &kp N4  &none      &none  &none  &none     &none      &none
               &kp deUNDERSCORE &kp N0      &none &none
                        >;
                };

/*               SYMBOL LAYER 

  ╭────────────────────╮ ╭────────────────────╮
  │  {   (   <   $   ~ │ │ __  __  __  __  __ │
  │  €   &   %   "   : │ │ __  __  __  __  __ │
  │  >   !   @   #   | │ │ __  __  __  __  __ │
  ╰───────────╮  }   ) │ │ __  __ ╭───────────╯
              ╰────────╯ ╰────────╯            
*/
       SYM_LAYER {
          bindings = <
  &kp deLEFT_BRACE    &kp deLEFT_PARENTHESIS  &kp deLESS_THAN  &kp deDOLLAR  &kp deTILDE        &none  &none  &none  &none  &none
  &kp deLESS_THAN     &kp deAMPERSAND         &kp dePERCENT    &kp deDQT     &kp deCOLON        &none  &none  &none  &none  &none
  &kp deGREATER_THAN  &kp deEXCLAMATION       &kp deAT_SIGN    &kp deHASH    &kp deBACKSLASH    &none  &none  &none  &none  &none
                                          &kp deRIGHT_BRACE &kp deRIGHT_PARENTHESIS             &none &none
                        >;
                };

       BLE_LAYER {
          bindings = <
  &reset        &none         &none         &bt BT_CLR     &none                 &none &none &none &none &none
  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1   &bt BT_SEL 0          &none &none &none &none &none
  &bootloader   &none         &none         &out OUT_USB   &none                 &none &none &none &none &none
                                              &none &none                        &none &none
                        >;
                };
   };
};
