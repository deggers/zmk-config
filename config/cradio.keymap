/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#include "wrappers.h"

#define BASE_LAYER 0
#define UML_LAYER 1
#define NAV_LAYER 2
#define NUM_LAYER 3
#define BLE_LAYER 5

/*                KEY POSITIONS

  ╭────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4 │ │  5   6   7   8   9 │
  │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
  │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
  ╰───────────╮ 30  31 │ │ 32  33 ╭───────────╯
              ╰────────╯ ╰────────╯            
*/

/ {

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <25>;
            key-positions = <12 13>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <25>;
            key-positions = <11 12>;
            bindings = <&kp TAB>;
        };

        combo_enter {
            timeout-ms = <25>;
            key-positions = <16 17>;
            bindings = <&kp RET>;
        };

        combo_ctrl_backspace {
            timeout-ms = <25>;
            key-positions = <16 17 18>;
            bindings = <&kp LC(BSPC)>;
        };

        combo_backspace {
            timeout-ms = <25>;
            key-positions = <17 18>;
            bindings = <&kp BSPC>;
        };
    };

    behaviors {        
			hm: homerow_mods {
				compatible = "zmk,behavior-hold-tap";
				label = "HOMEROW_MODS";
				#binding-cells = <2>;
				tapping-term-ms = <225>;
				quick-tap-ms = <0>;
				flavor = "tap-preferred";
				bindings = <&kp>, <&kp>;
			};
		};

    keymap {
       compatible = "zmk,keymap";
       BASE_LAYER {
          bindings = <
                       ___nail_L1___                 ___nail_R1___
                       ___nail_L2___                 ___nail_R2___
                       ___nail_L3___                 ___nail_R3___
    &lt NAV_LAYER ESC &lt UML_LAYER SPACE          &lt NUM_LAYER E &sk LSHIFT
                  >;
                };

       UML_LAYER {
          bindings = <
  &none  &none  &none  &none  &none      &none  &none             &kp deOE  &kp deUE &none
  &none  &none  &none  &none  &none      &none  &kp deNUMBER_SS   &kp deAE  &none    &none
  &none  &none  &none  &none  &none      &none  &none   &none     &none    &none
                        &none &none      &sl BLE_LAYER  &none
                        >;
                };


       NAV_LAYER {
          bindings = <
  &none  &none  &none  &none  &none      &none    &none     &none   &none      &none
  &none  &none  &none  &none  &none      &kp LEFT &kp DOWN  &kp UP  &kp RIGHT  &none
  &none  &none  &none  &none  &none      &none    &none     &none   &none      &none
                        &none &none      &none  &kp BSPC
                        >;
                };


       NUM_LAYER {
          bindings = <
  &none  &kp N7  &kp N8  &kp N9  &none      &none    &none     &none   &none      &none
  &none  &kp N1  &kp N2  &kp N3  &none      &kp RALT &kp DOT    &kp COMMA  &kp RALT   &kp RGUI
  &none  &kp N4  &kp N5  &kp N6  &none      &none    &none     &none   &none      &none
                          &none &kp N0      &none &none
                        >;
                };

      BLE_LAYER {
         bindings = <
                 ___BLE_L1___             ___NONE___
                 ___BLE_L2___             ___NONE___
                 ___BLE_L3___             ___NONE___
                     &none &none     &none &none
                        >;
                };
        };


};
