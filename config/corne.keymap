/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BAS_L 0
#define HDD_L 1
#define BLE_L 2

/ {

    chosen {
          zmk,matrix_transform = &five_column_transform;
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <400>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <150>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <150>;
            key-positions = <1 2>;
            bindings = <&kp TAB>;
        };

        combo_enter {
            timeout-ms = <150>;
            key-positions = <9 10>;
            bindings = <&kp RET>;
        };

    };

    keymap {
       compatible = "zmk,keymap";
       BASE_L {
          bindings = <
  &kp J      &kp K       &kp M         &kp F        &kp V           &kp Q  &kp W        &kp H  &kp C  &kp Y
  &hm LGUI R &hm LALT S  &hm LCTRL N   &hm LSHFT T  &hm RALT P      &hm RALT Z &hm RSHFT A    &hm RCTRL U  &hm RALT O     &hm RGUI I
  &kp X      &kp G       &kp L         &kp D        &kp B           &kp QMARK  &kp DOT    &kp COMMA  &kp APOS     &kp SQT
                                      &none &lt BLE_L ESC &kp SPACE               &kp E      &kp BSPC  &none
                        >;
                };

      BLE_L {
         bindings = <
    &reset &none &none &none &none     &out OUT_USB &out OUT_BLE  &none        &none        &bt BT_CLR
    &none &none &none &none &none      &bt  BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
    &bootloader &none &none &none &none     &none        &none        &none &none &none
                      &none &none &none     &none &none &none
                        >;
                };
        };
};
